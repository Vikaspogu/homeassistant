icon: mdi:home-assistant
title: Dashboard
path: dashboard
id: dash
cards:
  - type: "vertical-stack"
    cards:
    - type: "custom:button-card"
      color_type: blank-card
    ## Chips Temperature ###################################################################################################################
    - type: horizontal-stack
      cards:
      - type: custom:mushroom-chips-card
        card_mod:
          style: |
            ha-card {
              --chip-font-size: 14px;
            }
        chips:
          - type: menu
          - type: template
            tap_action:
              action: more-info
            entity: sensor.uptime
            content: |-
              Uptime {{ states('sensor.uptime') | as_datetime | relative_time }}
            icon: mdi:weather-cloudy-clock
            icon_color: amber
          - type: template
            entitiy: climate.living_room
            icon: mdi:thermostat
            icon_color:  |-
              {% if is_state('climate.living_room', 'heat') %}
                red
              {% elif is_state('climate.living_room', 'cool') %}
                blue
              {% else %}
                grey
              {% endif %}
            content: |-
              {{ states('climate.living_room') }}
              • 
              {{ states('sensor.thermostat_desired_temperature') }}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.bedroom_temperature
            content: |-
              Bedroom {{ states('sensor.bedroom_temperature') }} °F
            icon: mdi:bed-king
            icon_color: |-
              {% if states('sensor.bedroom_temperature') | float >= 70 %}
                red
              {% elif states('sensor.bedroom_temperature') | float >= 50 %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.living_room_temperature
            content: |-
              Living {{ states('sensor.living_room_temperature') }} °F
            icon: mdi:sofa
            icon_color: |-
              {% if states('sensor.living_room_temperature') | float >= 70 %}
                red
              {% elif states('sensor.living_room_temperature') | float >= 50 %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.office_area_temperature
            content: |-
              Office {{ states('sensor.office_area_temperature') }} °F
            icon: mdi:chair-rolling
            icon_color: |-
              {% if states('sensor.office_area_temperature') | float >= 70 %}
                red
              {% elif states('sensor.office_area_temperature') | float >= 50 %}
                blue
              {% else %}
                grey
              {% endif %}
          - type: template
            entity: binary_sensor.pogu_nas_security_status_2
            tap_action:
              action: more-info
            content: |-
              {%- if is_state('binary_sensor.pogu_nas_security_status_2', 'on') %} 
                Unsafe
              {%- else %}
                Safe
              {% endif %}
            icon: |-
              {%- if is_state('binary_sensor.pogu_nas_security_status_2', 'on') %} 
                mdi:alert
              {%- else %}
                mdi:shield-check
              {% endif %}
            icon_color: |-
              {% if is_state('binary_sensor.pogu_nas_security_status_2', 'on') %}
                red
              {% else %}
                green
              {% endif %}
          - type: template
            entity: sensor.pogu_nas_volume_1_volume_used
            tap_action:
              action: more-info
            content: |-
              {{ states('sensor.pogu_nas_volume_1_volume_used') }}%
            icon: mdi:database
            icon_color: |-
              {% if states('sensor.pogu_nas_volume_1_volume_used') | float >= 70 %}
                red
              {% else %}
                green
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            content: |-
              {{ states('sensor.pogu_nas_cpu_utilization_total') }}%
            entity: sensor.pogu_nas_cpu_utilization_total
            icon: mdi:cpu-64-bit
            icon_color: |-
              {% if states('sensor.pogu_nas_cpu_utilization_total') | float >= 70 %}
                red
              {% else %}
                green
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.tesla_battery_level
            content: |-
              {{ states('sensor.tesla_battery_level') }}%
            icon: |-
              {% if states('sensor.tesla_battery_level') | float >= 80 %}
                mdi:battery-80
              {% elif states('sensor.tesla_battery_level') | float >= 60 %}
                mdi:battery-60
              {% elif states('sensor.tesla_battery_level') | float >= 40 %}
                mdi:battery-40
              {% else %}
                mdi:battery-alert
              {% endif %}
            icon_color: |-
              {% if states('sensor.tesla_battery_level') | float >= 50 %}
                green
              {% else %}
                red
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.tesla_ideal_battery_range_mi
            content: |-
              {{ states('sensor.tesla_ideal_battery_range_mi') }}mi
            icon: mdi:ev-station
            icon_color: |-
              {% if states('sensor.tesla_ideal_battery_range_mi') | float >= 50 %}
                green
              {% else %}
                red
              {% endif %}
          - type: template
            tap_action:
              action: more-info
            entity: sensor.tesla_state
            content: |-
              {{ states('sensor.tesla_state') }}
            icon: |-
              {% if is_state('sensor.tesla_state', 'online') %}
                mdi:car-connected
              {% elif is_state('sensor.tesla_state', 'charging') %}
                mdi:car-electric-outline
              {% elif is_state('sensor.tesla_state', 'driving') %}
                mdi:car-wireless
              {% else %}
                mdi:car-clock
              {% endif %}
            icon_color: |-
              {% if is_state('sensor.tesla_state', 'online') %}
                green
              {% elif is_state('sensor.tesla_state', 'charging') %}
                blue
              {% elif is_state('sensor.tesla_state', 'driving') %}
                purple
              {% else %}
                grey
              {% endif %}
          - type: template
            entitiy: device_tracker.tesla_location
            icon: si:tesla
            icon_color: red
            content: |-
              {{ states('proximity.home_tesla') }}mi
              • 
              {{ states('device_tracker.tesla_location') | regex_replace(find='_', replace=' ', ignorecase=False)}}
            tap_action:
              action: "fire-dom-event"
              browser_mod:
                service: browser_mod.popup
                data:
                  title: Tesla Location
                  style:
                    $: >
                      [[[
                        if (hass.themes.theme.includes("desktop")){
                          var dialog = `
                            .mdc-dialog__surface{
                              border-radius: var(--border-radius) !important;
                            }
                          `;
                        } else{
                          var dialog = "";
                        }
                        return `
                          *{
                            --secondary-background-color: none !important;
                            --font-family: var(--primary-font-family);
                          }
                          ${dialog}
                        `;
                      ]]]
                    hui-vertical-stack-card:
                      $: >
                        button-card {
                          align-self: center;
                          padding: 0.2em 0 2.3em 0;
                        }
                        hui-entities-card{
                          padding: 0.8em 1.4em;
                        }
                      $hui-entities-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-history-graph-card$: >
                        .content {
                          padding: 0 2.4em !important;
                        }
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-glance-card$: >
                        ha-card{
                          box-shadow: none;
                        }
                      $hui-map-card:
                        $: >
                          ha-icon-button {
                            color: rgba(var(--color-blue),1);
                          }
                        $ha-map:
                          $: >
                            .leaflet-control-attribution {
                              display: none;
                            }
                            .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {
                              border: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-bar a {
                              background-color: rgba(var(--color-blue),0.2) !important;
                              color: rgba(var(--color-blue),1) !important;
                            }
                            .leaflet-bar a:first-child {
                              border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;
                            }
                            .leaflet-pane.leaflet-tile-pane {
                              filter: contrast(95%);
                            }
                  content:
                    type: "vertical-stack"
                    cards:
                      - type: "entities"
                        card_mod:
                          style: |
                            :host {
                              font-family: var(--primary-font-family);
                            }
                        entities:
                          - entity: "device_tracker.tesla_location"
                            secondary_info: "last-changed"
                      - type: "history-graph"
                        card_mod:
                          style: |
                            :host {
                              font-family: var(--primary-font-family);
                            }
                        entities:
                          - entity: "device_tracker.tesla_location"
                      - type: "glance"
                        card_mod:
                          style: |
                            :host {
                              font-family: var(--primary-font-family);
                            }
                        show_state: true
                        entities:
                          - type: custom:mushroom-entity-card
                            entity: sensor.tesla_odometer_mi
                          - type: custom:mushroom-entity-card
                            entity: sensor.tesla_version
                          - type: custom:mushroom-entity-card
                            entity: sensor.tesla_speed_mph
                      - type: "map"
                        card_mod:
                          style: |
                            :host {
                              font-family: var(--primary-font-family);
                            }
                        aspect_ratio: "12x10"
                        default_zoom: 16
                        entities: 
                          - "device_tracker.tesla_location"

    ## Welcome Card ###################################################################################################################
    - type: horizontal-stack
      cards:
        - type: "custom:button-card"
          template: "card_welcome_scenes"
          triggers_update: "input_boolean.welcome_scene_collapse"
          variables:
            ulm_card_welcome_scenes_collapse: input_boolean.welcome_scene_collapse
            ulm_weather: "weather.home"

    - type: horizontal-stack
      cards:
      - type: custom:mushroom-template-card
        icon: mdi:lightbulb-on
        icon_color: orange
        layout: vertical
        tap_action:
          action: call-service
          service: script.navigate_to_lights
        primary: Rooms
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                --icon-animation: eureka 1.8s infinite;
              }
              @keyframes eureka {
                0%, 45%, 55%, 100% { transform: translateY(0) scale(1); clip-path: polygon(20% 100%, 21% 38%, 36% 22%, 62% 21%, 79% 37%, 80% 100%, 53% 100%, 55% 67%, 62% 62%, 66% 55%, 67% 46%, 62% 38%, 55% 34%, 47% 34%, 39% 37%, 34% 44%, 33% 53%, 36% 60%, 41% 64%, 45% 66%, 45% 76%, 56% 76%, 54% 100%); }
                10%, 40% { transform: translateY(-5px) scale(1.12); clip-path: inset(0 0 0 0); }
                50% { transform: translateY(-2px) }
              }
      - type: custom:mushroom-template-card
        primary: Tesla
        icon: si:tesla
        layout: vertical
        icon_color: red
        tap_action:
          action: navigate
          navigation_path: /lovelace/tesla
      - type: custom:mushroom-template-card
        primary: NAS
        icon: mdi:memory
        layout: vertical
        icon_color: orange
        tap_action:
          action: navigate
          navigation_path: /lovelace/nas
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                --icon-animation: bit 250ms infinite; 
              }
              @keyframes bit {
                0%, 100% { clip-path: inset(0 0 0 0); }
                50% { clip-path: polygon(0% 0%, 0% 100%, 29% 100%, 30% 30%, 70% 30%, 70% 70%, 29% 70%, 29% 100%, 100% 100%, 100% 0%); }
              }

    - type: horizontal-stack
      cards:    
      - type: custom:mushroom-template-card
        entity: media_player.lg_webos_smart_tv
        icon: mdi:monitor
        primary: LG TV
        layout: vertical
        tap_action:
          action: call-service
          service: script.navigate_to_remote
        icon_color: |
          {%- if is_state(entity, 'on') %} 
          purple
          {% endif %}
        card_mod:
          style:
            mushroom-shape-icon$: |
              {%- if is_state(entity, 'on') %} 
              ha-icon:before {
                content: "";
                position: absolute;
                width: 40%;
                height: 30%;
                margin: 6%;
                animation: refresh 300ms linear infinite;
              }
              @keyframes refresh { 
                0% { background: linear-gradient(180deg, rgba(var(--rgb-{{ config.icon_color }}), 0.2) 0%, transparent 50%, transparent 100%); }
                25% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-{{ config.icon_color }}), 0.2) 25%, transparent 100%); }
                50% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-{{ config.icon_color }}), 0.2) 50%, transparent 100%); }
                75% { background: linear-gradient(180deg, transparent 0%, rgba(var(--rgb-{{ config.icon_color }}), 0.2) 75%, transparent 100%); }
                100% { background: linear-gradient(180deg, transparent 0%, transparent 50%, rgba(var(--rgb-{{ config.icon_color }}), 0.2) 100%); }
              }
              {% endif %}
      - type: custom:mushroom-template-card
        icon: mdi:battery
        icon_color: green
        layout: vertical
        primary: 'Battery'
        tap_action:
          action: call-service
          service: script.navigate_to_battery
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                --icon-animation: charge 3s linear infinite;
              }
              @keyframes charge {
                0%, 80% { clip-path: inset(0 0 0 0); }
                10% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 84%, 34% 84%, 34% 100%, 100% 100%, 100% 0%); }
                20% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 74%, 34% 74%, 34% 100%, 100% 100%, 100% 0%); }
                30% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 64%, 34% 64%, 34% 100%, 100% 100%, 100% 0%); }
                40% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 54%, 34% 54%, 34% 100%, 100% 100%, 100% 0%); }
                50% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 44%, 34% 44%, 34% 100%, 100% 100%, 100% 0%); }
                60% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 34%, 34% 34%, 34% 100%, 100% 100%, 100% 0%); }
                70% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 24%, 67% 24%, 67% 24%, 34% 24%, 34% 100%, 100% 100%, 100% 0%); }
              }
      - type: custom:mushroom-template-card
        primary: Cog
        icon: mdi:cog
        layout: vertical
        icon_color: grey
        tap_action:
          action: navigate
          navigation_path: /lovelace/system
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                --icon-animation: spin 1.5s steps(5) infinite;
              }

    ### Office and Bedroom
    - type: horizontal-stack
      cards:
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:mushroom-template-card
            primary: Office
            icon: mdi:desktop-classic
            layout: horizontal
            entity: light.office_ceiling_lights_group
            icon_color: |
              {%- if is_state(entity, 'on') %} 
              {{ '#%02x%02x%02x' % state_attr(entity, 'rgb_color') }}
              {% endif %}
            multiline_secondary: false
            secondary: >-
              {{ states('sensor.office_area_temperature') }}°F
              • 
              {{ states('sensor.office_area_humidity') }}
            tap_action:
              action: navigate
              navigation_path: /lovelace/rooms
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:vertical-stack-in-card
            horizontal: true
            cards:
              - type: custom:mushroom-template-card
                icon: mdi:lightbulb-on
                entity: light.office_ceiling_lights_group
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  amber
                  {% endif %}
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                        --icon-animation: illumination 2s infinite;
                        {% endif %}
                      }
                      @keyframes illumination {
                        0%, 100% { clip-path: inset(0 0 0 0); }
                        80% { clip-path: polygon(0% 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%); }
                      }
              - type: custom:mushroom-template-card
                entity: switch.office_area
                layout: vertical
                icon: mdi:fan
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  blue
                  {% endif %}
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                          --icon-animation: spin 1s linear infinite;
                        {% endif %}
                      }
                tap_action:
                  action: toggle
              - type: custom:mushroom-template-card
                entity: switch.office_purifier
                layout: vertical
                icon: mdi:air-purifier
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: toggle
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                          --icon-animation: air 1s infinite;
                        {% endif %}
                      }
                      @keyframes air {
                        0%, 100% { clip-path: inset(0 0 0 0); }
                        25% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 98% 32%, 63% 42%, 65% 58%, 100% 43%); }
                        75% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 100% 44%, 64% 61%, 64% 73%, 100% 72%); }
                        50% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 78% 38%, 64% 43%, 64% 72%, 100% 73%); }
                      }
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:mushroom-template-card
            primary: Bed Room
            icon: mdi:bed-king
            layout: horizontal
            multiline_secondary: false
            secondary: >-
              {{ states('sensor.bedroom_temperature') }}°F
              • 
              {{ states('sensor.bedroom_humidity') }}
            tap_action:
              action: navigate
              navigation_path: /lovelace/rooms
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:vertical-stack-in-card
            horizontal: true
            cards:
              - type: custom:mushroom-template-card
                entity: cover.bedroom_blinds
                layout: vertical
                icon: |
                  {%- if is_state(entity, 'open') %} 
                  mdi:blinds-open
                  {%- else %}
                  mdi:blinds
                  {% endif %}
                icon_color: |
                  {%- if is_state(entity, 'open') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: cover.bedroom
                layout: vertical
                icon: |
                  {%- if is_state(entity, 'open') %} 
                  mdi:curtains
                  {%- else %}
                  mdi:curtains-closed
                  {% endif %}
                icon_color: |
                  {%- if is_state(entity, 'open') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: switch.bedroom_purifier
                layout: vertical
                icon: mdi:air-purifier
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: toggle
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                          --icon-animation: air 1s infinite;
                        {% endif %}
                      }
                      @keyframes air {
                        0%, 100% { clip-path: inset(0 0 0 0); }
                        25% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 98% 32%, 63% 42%, 65% 58%, 100% 43%); }
                        75% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 100% 44%, 64% 61%, 64% 73%, 100% 72%); }
                        50% { clip-path: polygon(100% 100%, 0 100%, 0 0, 100% 0, 78% 38%, 64% 43%, 64% 72%, 100% 73%); }
                      }
    
    ### Kitchen
    - type: horizontal-stack
      cards:
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:mushroom-template-card
            primary: Kitchen
            icon: mdi:stove
            layout: horizontal
            entity: light.kitchen_lights_group
            icon_color: |
              {%- if is_state(entity, 'on') %} 
              {{ '#%02x%02x%02x' % state_attr(entity, 'rgb_color') }}
              {% endif %}
            multiline_secondary: false
            secondary: >-
              {{ states('sensor.kitchenmotionsensor_device_temperature') }}°F
            tap_action:
              action: navigate
              navigation_path: /lovelace/rooms
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:vertical-stack-in-card
            horizontal: true
            cards:
              - type: custom:mushroom-template-card
                icon: mdi:lightbulb-on
                entity: light.kitchen_lights_group
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  amber
                  {% endif %}
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                        --icon-animation: illumination 2s infinite;
                        {% endif %}
                      }
                      @keyframes illumination {
                        0%, 100% { clip-path: inset(0 0 0 0); }
                        80% { clip-path: polygon(0% 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%); }
                      }
              - type: custom:mushroom-template-card
                entity: cover.garage_door
                layout: vertical
                icon: mdi:garage
                icon_color: |
                  {%- if is_state(entity, 'open') %} 
                  red
                  {%- else %}
                  green
                  {% endif %}
                tap_action:
                  action: toggle
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      {%- if is_state(entity, 'open') %} 
                      ha-icon {
                        --icon-animation: door 3s steps(1) infinite;
                      }
                      @keyframes door {
                        0% { clip-path: inset(0 0 0 0); }
                        25%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 68% 100%, 69% 73%, 32% 73%, 31% 100%, 0 100%); }
                        50%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 68% 100%, 69% 61%, 32% 61%, 31% 100%, 0 100%); }
                        75% { clip-path: polygon(0 0, 100% 0, 100% 100%, 68% 100%, 69% 48%, 32% 48%, 31% 100%, 0 100%); }
                      }
                      {%- else %}
                      none
                      {% endif %}
              - type: custom:mushroom-template-card
                entity: switch.garage
                layout: vertical
                icon: mdi:flash
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  amber
                  {% endif %}
                tap_action:
                  action: toggle
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {%- if is_state(entity, 'on') %} 
                        --icon-animation: flash 4s linear infinite;
                        {% endif %}
                      }
                      @keyframes flash {
                        0%, 4%, 8%, 12%, 16%, 20%, 24%, 28%, 32%, 100% { transform: translate(0px,0px); }
                        2% { transform: translate(-0.3px, 0px); }
                        6% { transform: translate(0.3px, 0px); }
                        10% { transform: translate(-0.2px, 0px); }
                        14% { transform: translate(0.2px, 0px); }
                        18% { transform: translate(-0.2px, 0px); }
                        22% { transform: translate(0.5px, 0px); }
                        26% { transform: translate(-0.5px, 0px); }
                        34% { transform: translate(-1px, 5px); --icon-color: rgb(var(--rgb-amber)); }
                        38% { transform: translate(0px, 0px); --icon-color: rgb(var(--rgb-white)); }
                        40% { --icon-color: rgb(var(--rgb-amber)); }
                      }

      ### Living room          
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:mushroom-template-card
            primary: Living Room
            icon: mdi:sofa
            layout: horizontal
            entity: light.living_room_dining_group
            icon_color: |
              {%- if is_state(entity, 'on') %} 
              {{ '#%02x%02x%02x' % state_attr(entity, 'rgb_color') }}
              {% endif %}
            multiline_secondary: false
            secondary: >-
              {{ states('sensor.living_room_temperature') }}°F
            tap_action:
              action: navigate
              navigation_path: /lovelace/rooms
            hold_action:
              action: none
            double_tap_action:
              action: none
          - type: custom:vertical-stack-in-card
            horizontal: true
            cards:
              - type: custom:mushroom-template-card
                icon: mdi:lightbulb-on
                entity: light.living_room_dining_group
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  amber
                  {% endif %}
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                        --icon-animation: illumination 2s infinite;
                        {% endif %}
                      }
                      @keyframes illumination {
                        0%, 100% { clip-path: inset(0 0 0 0); }
                        80% { clip-path: polygon(0% 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%); }
                      }
              - type: custom:mushroom-template-card
                entity: cover.curtain_living_room
                layout: vertical
                icon: |
                  {%- if is_state(entity, 'open') %} 
                  mdi:curtains
                  {%- else %}
                  mdi:curtains-closed
                  {% endif %}
                icon_color: |
                  {%- if is_state(entity, 'open') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: switch.living_room_window_socket_2
                icon: mdi:cctv
                name: Camera
                icon_color: |
                  {%- if is_state(entity, 'on') %} 
                  cyan
                  {% endif %}
                tap_action:
                  action: toggle
                card_mod:
                  style:
                    mushroom-shape-icon$: |
                      ha-icon {
                        {% if is_state(config.entity, 'on') %}
                        --icon-animation: scan 5s ease-in-out infinite;
                        transform-origin: 90% 80%
                        {% endif %}
                      }
                      @keyframes scan {
                        0%, 100% { transform: rotate(20deg); }
                        50% { transform: rotate(-15deg); }
                      }

    - type: horizontal-stack
      cards:
      - type: custom:mushroom-entity-card
        entity: input_boolean.on_vacation
        name: Vacation
        vertical: true
        tap_action:
          action: toggle
        icon: mdi:rocket-launch
        icon_color: deep-orange
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                {% if is_state(config.entity, 'on') %}
                  --icon-animation: thrust 100ms infinite, motion 3s ease-in-out infinite;
                {% endif %}
              }
              @keyframes thrust {
                0% { clip-path: polygon(0 0, 0 47%, 22% 57%, 28% 63%, 0 91%, 11% 100%, 37% 73%, 45% 77%, 55% 100%, 100% 100%, 100% 0%); }
                33% { clip-path: polygon(0 0, 0 47%, 24% 59%, 42% 76%, 54% 100%, 100% 100%, 100% 0); }
                66% { clip-path: polygon(0 0, 0 92%, 28% 64%, 36% 72%, 9% 100%, 100% 100%, 100% 0%); }
              }
              @keyframes motion {
                0%, 100% { transform: translateY(-2px) translateX(-3px); }
                50% { transform: translateY(3px) translateX(2px); }
              }
      - type: custom:mushroom-entity-card
        entity: input_boolean.living_room_override
        name: Keep Lights On
        vertical: true
        tap_action:
          action: toggle
        icon: mdi:lightbulb-on
        icon_color: amber
        card_mod:
          style:
            mushroom-shape-icon$: |
              ha-icon {
                {% if is_state(config.entity, 'on') %}
                  --icon-animation: illumination 2s infinite;
                {% endif %}
              }
              @keyframes illumination {
                0%, 100% { clip-path: inset(0 0 0 0); }
                80% { clip-path: polygon(0% 99%, 20% 55%, 22% 37%, 39% 20%, 61% 21%, 77% 35%, 79% 57%, 99% 100%); }
              }

    # - type: horizontal-stack
    #   cards:
    #   - type: custom:mushroom-entity-card
    #     entity: switch.living_room_window_socket_1
    #     name: Christmas Light
    #     icon: mdi:string-lights
    #     secondary_info: last-changed
    #     tap_action:
    #       action: toggle

    - type: horizontal-stack
      cards:
      - type: custom:mushroom-humidifier-card
        entity: humidifier.bedroom_humidifier
        name: Bedroom Humidifier
        show_target_humidity_control: true
      - type: custom:mushroom-climate-card
        entity: climate.living_room
        hvac_modes:
          - heat_cool
          - heat
          - cool
        show_temperature_control: true
        collapsible_controls: false
        name: Air Conditioner
        card_mod:
          style: |
            mushroom-shape-icon {
              {% if is_state(config.entity, 'heat_cool') %}
                --card-mod-icon: mdi:autorenew;
                animation: spin 3s ease-in-out infinite alternate;
              {% elif is_state(config.entity, 'heat') %}
                --card-mod-icon: mdi:fire;
                animation: heat 2s infinite;
              {% elif is_state(config.entity, 'cool') %}
                --card-mod-icon: mdi:snowflake;
                animation: cool 6s ease-in-out infinite;
              {% else %}
                --card-mod-icon: mdi:air-conditioner; 
              {% endif %}
              display: flex;
            }
            @keyframes cool {
              0%, 100% { transform: rotate(25deg); }
              25% { transform: rotate(-25deg); }
              50% { transform: rotate(50deg); }
              75% { transform: rotate(-50deg); }
            }
            @keyframes heat {
              0%, 100% { --icon-color: rgba(var(--rgb-red), 1); }
              10%, 90% { --icon-color: rgba(var(--rgb-red), 0.8); }
              20%, 80% { --icon-color: rgba(var(--rgb-red), 0.6); }
              30%, 70% { --icon-color: rgba(var(--rgb-red), 0.4); }
              40%, 60% { --icon-color: rgba(var(--rgb-red), 0.2); }
              50% { --icon-color: rgba(var(--rgb-red), 0); }
            }
            @keyframes dry {
              0%, 100% { --icon-symbol-size: 21px; }
              10%, 90% { --icon-symbol-size: 22px; }
              20%, 80% { --icon-symbol-size: 23px; }
              30%, 70% { --icon-symbol-size: 24px; }
              40%, 60% { --icon-symbol-size: 25px; }
              50% { --icon-symbol-size: 26px; }
            }

    ## Camera ###################################################################################################################   
    - type: custom:mushroom-title-card
      title: Camera
      subtitle: Front Door
    - type: horizontal-stack
      cards:
      - type: 'custom:frigate-card'
        cameras:
        - camera_entity: camera.doorbell

    ## Vacuum ###################################################################################################################   
    - type: custom:mushroom-title-card
      title: Vacuum
      subtitle: Eufy Livingroom
    - type: horizontal-stack
      cards:
      - type: custom:mushroom-vacuum-card
        entity: "vacuum.robovac"
        commands: ["start_pause", "stop", "locate", "return_home"]
        icon_animation: true

    # - type: horizontal-stack
    #   cards:
    #     - type: 'custom:weather-radar-card'
    #       frame_count: 144
    #       frame_delay: 100
    #       marker_latitude: !secret homeassistant_latitude
    #       marker_longitude: !secret homeassistant_longitude
    #       show_marker: true
    #       show_range: true
    #       show_zoom: true
    #       show_recenter: true
    #       show_playback: true
    #       zoom_level: 8

