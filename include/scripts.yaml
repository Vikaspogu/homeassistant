script:

  ####################################################
  #                                                  #
  #                      SCRIPT                      #
  #                                                  #
  ####################################################
    
  notify_tesla_open:
    alias: "Notify when something on the tesla is left open"
    sequence:
      - service: notify.notify_group
        data_template:
          title: "Tesla Notification"
          message: "You have left the {{ whatsopen }} open on the Tesla!"
      - service: script.turn_on
        data_template:
          entity_id: script.notify_tesla_{{ whatsopen }}_open

  notify_tesla_doors_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "doors"

  notify_tesla_frunk_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "frunk"

  notify_tesla_trunk_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "trunk"

  notify_tesla_windows_open:
    sequence:
      - delay:
          minutes: 5
      - delay:
          seconds: "{{ range(0, 30)|random|int }}"
      - service: script.turn_on
        entity_id: script.notify_tesla_open
        data:
          variables:
            whatsopen: "windows"  

  navigate_to_nas:
    sequence:
      - service: input_select.select_option
        data:
          option: Synology
        target:
          entity_id: input_select.system_mode
      - service: browser_mod.navigate
        data:
          navigation_path: /lovelace/system
  
  navigate_to_temperature:
    sequence:
      - service: input_select.select_option
        data:
          option: Temperature
        target:
          entity_id: input_select.room_mode
      - service: browser_mod.navigate
        data:
          navigation_path: /lovelace/rooms